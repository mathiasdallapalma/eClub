FORMAT: 1A
HOST: http://eclub.herokuapp.com

# eClub API

L’obiettivo generale di **eClub** quello di semplificare tutto ciò che riguarda l'organizzazione e la gestione di un’associazione sportiva di media grandezza.
In particolare **eClub** si prefigge di:
- digitalizzare tutte le attività di amministrazione (dall’iscrizione di nuovi associati alla
verifica delle scadenze delle visite mediche);
- sostenere le società sportive come luogo di aggregazione rendendone più snella e
sicura la gestione;
- dare alle società sportive una nuova possibilità di innovarsi in campo digitale.

**eClub** permette ad ogni associazione di configurare e visualizzare tutte le informazioni
relative alle proprie squadre composte ciascuna da Team Manager, Coach e Atleti.

## User [/api/v1/user]

### List all users [GET]

+ Response 201 (application/json)

            [
                {
                    "_id": "62987f9e04224e2d33075e28",
                    "email": "giovanni@storti.it",
                    "password": "$2a$10$HpjRQaVGbdkRBtnBzolrH.XGMzkK9wOmWCcKax4GRPlfNk0yHOvIu",
                    "name": "Giovanni",
                    "surname": "Storti",
                    "a_type": {
                        "_id": "62987f2b04224e2d33075e22",
                        "name": "Dirigente del Direttivo",
                        "type": 1
                    },
                    "zip": "38016",
                    "city": "Mezzocorona",
                    "province": "TN",
                    "nation": "IT",
                    "street": "Via Arrotati 10",
                    "phone": "340432543",
                    "status": 0,
                    "hidden": false,
                    "added_by": {
                        "_id": "62987f9e04224e2d33075e28",
                        "name": "Mario",
                        "surname": "Rossi"
                    },
                    "created_at": "2022-06-02T09:15:10.502Z",
                    "__v": 0,
                    "birth": "1966-03-12T00:00:00.000Z"
                }
            ]

+ Response 401 (application/json)

    + Body

            {
                "error":"Invalid Token"
            }
            
+ Response 403 (application/json)


    + Body

            {
                "error":"Invalid token. / User is not admin."
            }

+ Response 500 (application/json)

            {
                "error": "Database error message"
            }

### Add a new User [POST]
You may add a new user using this action. It takes a JSON object containing the necessary information.

+ Parameters

    - email: user@domain.it (String) - ###### required
    - password: sdfe2w23! (String) - ###### required
    - name: Samuel (String) - ###### not required
    - surname: Rossi (String) - ###### not required
    - birth: 10/10/1999 (Date) - ###### required
    - a_type: 1 (ObjectId) - ###### not required
    - zip: 38016 (String) - ###### not required
    - city: Trento (String) - ###### not required
    - province: TN (String) - ###### not required
    - nation: IT (String) - ###### not required
    - street: Via Verdi 5 (String) - ###### not required
    - phone: 3482747820 (String) - ###### not required
    - status: 0 (Number) - ###### not required
    - hidden: 0 (Boolean) - ###### not required
    - team_id: wefwweewf (ObjectId) - ###### not required
    - added_by: sd3fe2w23 (ObjectId) - ###### required
    - created_at: 2020/12/13 (Date) - ###### required
    - updated_at: 2020/12/13 (Date) - ###### required
    - deleted_at: 2020/12/13 (Date) - ###### required

+ Request (application/json)

    + Headers
    
            auth-token: token
    
    + Body

            {
                "email": "giovanni@storti.it",
                "name":"Giovanni",
                "surname": "Storti",
                "password": "trecaratterieunpunto",
                "a_type":"1",
                "birth": "10/10/1999",
                "zip":"38016",
                "city":"Mezzocorona",
                "province":"TN",
                "nation":"IT",
                "street":"Via Arrotati 10",
                "phone":"340432543",
                "added_by":"628905acfc8a650ccd42368e"
            }
            
+ Response 201 (application/json)

    + Headers

            Location: /api/v1/user/

    + Body

            {
                "user": "628bca9fd92d31c040d82474"
            }

+ Response 400 (application/json)


    + Body

            {
                "error":"Validation error"
            }

+ Response 401 (application/json)


    + Body

            {
                "error":"Invalid Token"
            }
            
+ Response 403 (application/json)


    + Body

            {
                "error":"Invalid token. / User is not admin."
            }

+ Response 500 (application/json)

            {
                "error": "Database error message"
            }

## Specific User [/api/v1/user/{idUser}]

### Getting specific user[GET]

+ Request (application/json)

    + Headers
    
            auth-token: token

+ Response 201 (application/json)

            [
                {
                    "_id": "62987f9e04224e2d33075e28",
                    "email": "giovanni@storti.it",
                    "password": "$2a$10$HpjRQaVGbdkRBtnBzolrH.XGMzkK9wOmWCcKax4GRPlfNk0yHOvIu",
                    "name": "Giovanni",
                    "surname": "Storti",
                    "a_type": {
                        "_id": "62987f2b04224e2d33075e22",
                        "name": "Dirigente del Direttivo"
                    },
                    "zip": "38016",
                    "city": "Mezzocorona",
                    "province": "TN",
                    "nation": "IT",
                    "street": "Via Arrotati 10",
                    "phone": "340432543",
                    "status": 0,
                    "hidden": false,
                    "added_by": {
                        "_id": "62987f9e04224e2d33075e28",
                        "name": "Mario",
                        "surname": "Rossi"
                    },
                    "created_at": "2022-06-02T09:15:10.502Z",
                    "__v": 0,
                    "birth": "1966-03-12T00:00:00.000Z"
                }
            ]

+ Response 401 (application/json)

    + Body

            {
                "error":"Invalid Token"
            }
            
+ Response 403 (application/json)


    + Body

            {
                "error":"Invalid token. / User is not admin."
            }

+ Response 500 (application/json)

            {
                "error": "Database error message"
            }
            
### Update a specific user [PATCH]

You may update an existing user using this action. It takes a JSON object containing the new complete information.

+ Request (application/json)

    + Headers
    
            auth-token: token
    
    + Body

            {
                "email": "giovanni@storti.it",
                "name":"Giovanni",
                "surname": "Storti",
                "password": "trecaratterieunpunto",
                "a_type":"62987f9e04224e2d33075e28",
                "zip":"38016",
                "city":"Mezzocorona",
                "province":"TN",
                "nation":"IT",
                "street":"Via Arrotati 10",
                "phone":"340432543",
                "added_by":"62987f9e04224e2d33075e28"
            }

+ Response 200 (application/json)

    + Headers

            Location: /api/v1/user/

    + Body

            {
                "message": "Success updating"
            }

+ Response 400 (application/json)


    + Body

            {
                "error":"Object sent is not a user."
            }

+ Response 401 (application/json)


    + Body

            {
                "error":"No token provided."
            }
            
+ Response 403 (application/json)


    + Body

            {
                "error":"Invalid token. / User is not admin."
            }

+ Response 500 (application/json)

            {
                "error": "Database error message"
            }

### Delete a specific user [DELETE]

You may delete an existing user using this action. It takes a JSON object containing the id of the user to delete.

+ Request (application/json)

    + Headers
    
            auth-token: token
    
    + Body

            {
                "_id": "62894da00842bba6fcfbc9a3",
            }


+ Response 200 (application/json)
    + Headers

            Location: /api/v1/user/
            
    + Body

            {
                "result":"Succesfully removed `req.body.id`"
            }

+ Response 400 (application/json)


    + Body

            {
                "error":"Object passed has incorrect values."
            }

+ Response 401 (application/json)


    + Body

            {
                "error":"No token provided."
            }
            
+ Response 403 (application/json)


    + Body

            {
                "error":"Invalid token. / User is not admin."
            }

+ Response 500 (application/json)

            {
                "error": "Database error message"
            }
            
## Team [/api/v1/team]
### List all teams [GET]

+ Response 201 (application/json)

[
    {
        "_id": "628a8b0dd4e5704c4c5098e7",
        "category": "Esordienti",
        "status": 0,
        "hidden": 0,
        "added_by": "23",
        "created_at": "2022-05-22T19:12:13.819Z",
        "__v": 0
    }
]

+ Response 401 (application/json)

    + Body

            {
                "error":"Invalid Token"
            }
            
+ Response 403 (application/json)


    + Body

            {
                "error":"Invalid token. / User is not admin."
            }

+ Response 500 (application/json)

            {
                "error": "Database error message"
            }

### Add a new team [POST]
You may add a new team using this action. It takes a JSON object containing the necessary information.

+ Parameters

    - category: Esordienti (String) - ###### requiredx
    - status: 0 (Number) - ###### not required
    - hidden: 0 (Boolean) - ###### not required
    - added_by: sd3fe2w23 (String) - ###### required
    - created_at: 2020/12/13 (Date) - ###### required
    - updated_at: 2020/12/13 (Date) - ###### not required
    - deleted_at: 2020/12/13 (Date) - ###### not required
    
    
+ Request (application/json)

    + Headers
    
            auth-token: token
    
    + Body

            {
                "category":"Esordienti",x
                "status":"0",
                "hidden":"0",
                "added_by":"1"
            }

+ Response 201 (application/json)

    + Headers

            Location: /api/v1/team/

    + Body

            {
                "team": "628bca9fd92d31c040d82474"
            }

+ Response 400 (application/json)


    + Body

            {
                "error":"Validation error"
            }

+ Response 401 (application/json)


    + Body

            {
                "error":"Invalid Token"
            }
            
+ Response 403 (application/json)


    + Body

            {
                "error":"Invalid token. / User is not admin."
            }

+ Response 500 (application/json)

            {
                "error": "Database error message"
            }

## Specific Team [/api/v1/team/{idTeam}]
### Update a specific team [PATCH]

You may update an existing user using this action. It takes a JSON object containing the new complete information.

+ Request (application/json)

    + Headers
    
            auth-token: token
    
    + Body

             {
                "category":"Esordienti",a
                "status":"0",
                "hidden":"0",
            }

+ Response 200 (application/json)

    + Headers

            Location: /api/v1/team/

    + Body

            {
                "message": "Success updating"
            }

+ Response 400 (application/json)


    + Body

            {
                "error":"Object sent is not a user."
            }

+ Response 401 (application/json)


    + Body

            {
                "error":"No token provided."
            }
            
+ Response 403 (application/json)


    + Body

            {
                "error":"Invalid token. / User is not admin."
            }

+ Response 500 (application/json)

            {
                "error": "Database error message"
            }

### Delete a specific team [DELETE]

You may delete an existing team using this action. It takes a JSON object containing the id of the team to delete.

+ Request (application/json)

    + Headers
    
            auth-token: token
    
    + Body
            {
                "_id": "62894da00842bba6fcfbc9a3",
            }

+ Response 200 (application/json)
    + Headers

            Location: /api/v1/user/
            
    + Body

            {
                "result":"Succesfully removed `req.body.id`"
            }

+ Response 400 (application/json)


    + Body

            {
                "error":"Object passed has incorrect values."
            }

+ Response 401 (application/json)


    + Body

            {
                "error":"No token provided."
            }
            
+ Response 403 (application/json)


    + Body

            {
                "error":"Invalid token. / User is not admin."
            }

+ Response 500 (application/json)

            {
                "error": "Database error message"
            }
## User Type [/api/v1/usertype]
### List all User Type [GET]

+ Response 201 (application/json)

[
    {
        "_id": "628aa05b963e0dc94bae524d",
        "name": "Team Manager",
        "type": 1,
        "__v": 0
    }
]

+ Response 401 (application/json)

    + Body

            {
                "error":"Invalid Token"
            }
            
+ Response 403 (application/json)


    + Body

            {
                "error":"Invalid token. / User is not admin."
            }

+ Response 500 (application/json)

            {
                "error": "Database error message"
            }

### Add a new user type [POST]
You may add a new user type using this action. It takes a JSON object containing the necessary information.

+ Parameters

    - name: Team Manager (String) - ###### required
    - type: 1 (Number) - ###### required
    
    
+ Request (application/json)

    + Headers
    
            auth-token: token
    
    + Body

            {
                "name":"Team Manager",
                "type": "3",
            }

+ Response 201 (application/json)

    + Headers

            Location: /api/v1/usertype/

    + Body

            {
                "user-type": "628bca9fd92d31c040d82474"
            }

+ Response 400 (application/json)


    + Body

            {
                "error":"Validation error"
            }

+ Response 401 (application/json)


    + Body

            {
                "error":"Invalid Token"
            }
            
+ Response 403 (application/json)


    + Body

            {
                "error":"Invalid token. / User is not admin."
            }

+ Response 500 (application/json)

            {
                "error": "Database error message"
            }

## Specific User Type [/api/v1/usertype/{idUserType}]
### Update a specific user type [PATCH]

You may update an existing user using this action. It takes a JSON object containing the new complete information.

+ Request (application/json)

    + Headers
    
            auth-token: token
    
    + Body

             {
                "name":"Coach",
                "type": "0",
            }

+ Response 200 (application/json)

    + Headers

            Location: /api/v1/usertype/

    + Body

            {
                "message": "Success updating"
            }

+ Response 400 (application/json)


    + Body

            {
                "error":"Object sent is not a user."
            }

+ Response 401 (application/json)


    + Body

            {
                "error":"No token provided."
            }
            
+ Response 403 (application/json)


    + Body

            {
                "error":"Invalid token. / User is not admin."
            }

+ Response 500 (application/json)

            {
                "error": "Database error message"
            }

### Delete a specific user type [DELETE]

You may delete an existing user type using this action. It takes a JSON object containing the id of the user type to delete.

+ Request (application/json)

    + Headers
    
            auth-token: token
    
    + Body
            {
                "_id": "62894da00842bba6fcfbc9a3",
            }

+ Response 200 (application/json)
    + Headers

            Location: /api/v1/usertype/
            
    + Body

            {
                "result":"Succesfully removed `req.body.id`"
            }

+ Response 400 (application/json)


    + Body

            {
                "error":"Object passed has incorrect values."
            }

+ Response 401 (application/json)


    + Body

            {
                "error":"No token provided."
            }
            
+ Response 403 (application/json)


    + Body

            {
                "error":"Invalid token. / User is not admin."
            }

+ Response 500 (application/json)

            {
                "error": "Database error message"
            }

## Login [/api/v1/auth]
### Login [POST]

+ Parameters

    - email: user@domain.com (String) - ###### required
    - password: "password" (String) - ###### required

+ Request (application/json)

    + Headers
    
            auth-token: token
    
    + Body

            {
                "email":"giovanni@storti.it",
                "password": "password",
            }
    
+ Response 201 (application/json)

            {
                "jwt": "628905746649202d56fd402engrufsdi.fvdfgbfdgjythfgdbvcfghtfgdvcbnghg.dfcdseregfbvc-xsdfgh",
                "rt": "uhgrfbdonufehgjgiru758493.guriofdjvsmfkndjwfifob.39485tuifvdsafg"
            }

+ Response 400 (application/json)

    + Body

            {
                "error":"Invalid Token"
            }
            
+ Response 500 (application/json)

            {
                "error": "Database error message"
            }
            
## Password Reset [/api/v1/password_reset]
### Reset [POST]

+ Parameters

    - email: user@domain.com (String) - ###### required
    - password: "password" (String) - ###### required

+ Request (application/json)

    + Headers
    
            auth-token: token
    
    + Body

            {
                "email":"giovanni@storti.it",
                "password": "password",
            }

+ Response 201 (application/json)

            {
                "message": "Succesfully notified user",
            }

+ Response 401 (application/json)


    + Body

            {
                "error":"Error sending email"
            }
            
## Password Updating [/api/v1/password_reset/{token}]

### Updating [PUT]

+ Parameters

    - email: user@domain.com (String) - ###### required
    - password: "password" (String) - ###### required

+ Response 201 (application/json)

            {
                "message": "Successfully changes user password",
            }

+ Response 401 (application/json)


    + Body

            {
                "error":"No token provided."
            }
            
+ Response 403 (application/json)


    + Body

            {
                "error":"Invalid token. / User is not admin."
            }
            
+ Response 500 (application/json)

            {
                "error": "Error updating user password"
            }